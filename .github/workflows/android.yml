name: Android Release

# Controls when the workflow will run
on:

  # Triggers the workflow on push or pull request events for the "release" branch;
  # you can change it according to your requirement

  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab from your GitHub repo
  # (a workflow run is made up of one or more jobs that can run sequentially or in parallel)

  workflow_dispatch:

# currently Contains one job that do all process from build to deploy
jobs:
  build:
    # to only merge if there is a merge action
    #    if: github.event.pull_request.merged == true
    # Contains the type of runner that the job will run on
    runs-on: ubuntu-latest


    # Uses steps to represent a sequence of tasks that will be executed as part of job
    steps:
      # Readies your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.1

      # Sets up Java so your job can use it for the Flutter app build
      - uses: actions/setup-java@v4.2.1
        with:
          distribution: 'adopt'
          java-version: "11"
          # providing Gradle to be cached with respect to the Java SDK
          cache: 'gradle'
      
      # Sets up Flutter using the subosito Flutter workflow
      - uses: subosito/flutter-action@v2.13.0
        with:
          # Adjusts to the Flutter version you are working with
          flutter-version: "3.19.3"
          channel: 'stable'
          # enabling caching for the Flutter SDK
          cache: true

      # caching build  - gradle  - pub-cache
      - name: Cache
        uses: actions/cache@v4.0.1
        with:
          path: |
            build/
            android/.gradle/
          key: ${{ runner.os }}-build_and_android-${{ hashFiles('*/.gradle*', 'pubspec.lock') }}



      # Runs a single command using the runnerâ€™s shell
      - name: Get dependencies
        run: flutter pub get

#      - name: Run Unit Tests
#        run: flutter test

      # Read the updated version from version1.txt file
      - name: Read release version
        id: read-version
        uses: NiklasLehnfeld/flutter-version-number-action@v1
        with:
          file-path: pubspec.yaml


      - name: Start release build APK
        run: flutter build apk

#      - name: Run E2E Tests
#        run: flutter drive --target=integration_test/app_test.dart

      # --- creating github apk-release ---
      - name: Show Me the secret
        run: echo " ${{ secrets.GITHUBRELEASETOKEN }}"

      - name: Create apk-release in GitHub
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          token: ${{ secrets.GITHUBRELEASETOKEN }}
          tag: apk_Release_${{ steps.read-version.outputs.version-number }}
          allowUpdates: true

#      - name: Send E-Mail (SMTP)
#        uses: hilarion5/send-mail@v1
#        with:
#          smtp-server: smtp.example.com
#          smtp-port: 465
#          smtp-secure: true
#          from-email: sender@example.com
#          to-email: recipient1@example.com,recipient2@example.com
#          username: yourusername
#          password: yourpassword
#          subject: Test Email
#          body: This is a test email sent from GitHub Actions https://github.com/Melhamoouly/posts_task .
#          html: |
#            <h1>This is a test email</h1>
#            <p>Test Paragraph</p>
